{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/post.service\";\nimport * as i3 from \"../services/comment.service\";\nimport * as i4 from \"../services/auth.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nfunction PostDetailComponent_div_0_div_1_button_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function PostDetailComponent_div_0_div_1_button_13_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const post_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.onEditPost(post_r4.id));\n    });\n    i0.ɵɵtext(1, \"Edit\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PostDetailComponent_div_0_div_1_button_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function PostDetailComponent_div_0_div_1_button_14_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const post_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.onDeletePost(post_r4.id));\n    });\n    i0.ɵɵtext(1, \"Delete\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a1) {\n  return [\"/post\", a1];\n};\nfunction PostDetailComponent_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"div\", 7)(2, \"h4\", 8);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 9);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 10)(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelement(9, \"br\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\");\n    i0.ɵɵtemplate(13, PostDetailComponent_div_0_div_1_button_13_Template, 2, 0, \"button\", 11);\n    i0.ɵɵtemplate(14, PostDetailComponent_div_0_div_1_button_14_Template, 2, 0, \"button\", 12);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const post_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(10, _c0, post_r4.id));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(post_r4.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r4.content);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"by @\", post_r4.username, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(11, 7, post_r4.createdAt, \"medium\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isAuth && post_r4.username === ctx_r1.authService.isUser);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isAuth && post_r4.username === ctx_r1.authService.isUser);\n  }\n}\nfunction PostDetailComponent_div_0_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"div\", 7)(2, \"h5\", 8);\n    i0.ɵɵtext(3, \"Add Comment\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"form\", 16);\n    i0.ɵɵlistener(\"submit\", function PostDetailComponent_div_0_div_4_Template_form_submit_4_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onSubmit());\n    });\n    i0.ɵɵelementStart(5, \"div\", 17)(6, \"textarea\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function PostDetailComponent_div_0_div_4_Template_textarea_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.newComment.content = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"button\", 19);\n    i0.ɵɵtext(8, \"Add a Comment\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.newComment.content);\n  }\n}\nconst _c1 = function (a1, a2) {\n  return [\"/editComment\", a1, a2];\n};\nfunction PostDetailComponent_div_0_div_5_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 24);\n    i0.ɵɵtext(1, \"Edit\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const comment_r16 = i0.ɵɵnextContext().$implicit;\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction2(1, _c1, ctx_r17.postId, comment_r16.id));\n  }\n}\nfunction PostDetailComponent_div_0_div_5_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function PostDetailComponent_div_0_div_5_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const comment_r16 = i0.ɵɵnextContext().$implicit;\n      const ctx_r20 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r20.deleteComment(comment_r16.id));\n    });\n    i0.ɵɵtext(1, \"Delete\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PostDetailComponent_div_0_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"div\", 7)(2, \"div\", 21);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 9);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, PostDetailComponent_div_0_div_5_button_7_Template, 2, 4, \"button\", 22);\n    i0.ɵɵtemplate(8, PostDetailComponent_div_0_div_5_button_8_Template, 2, 0, \"button\", 23);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const comment_r16 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\" by \", comment_r16.username, \" on \", i0.ɵɵpipeBind2(4, 5, comment_r16.createdAt, \"medium\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(comment_r16.content);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.isAuth && comment_r16.username === ctx_r3.authService.isUser);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.isAuth && comment_r16.username === ctx_r3.authService.isUser);\n  }\n}\nfunction PostDetailComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, PostDetailComponent_div_0_div_1_Template, 15, 12, \"div\", 2);\n    i0.ɵɵelementStart(2, \"h3\", 3);\n    i0.ɵɵtext(3, \"Comments\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, PostDetailComponent_div_0_div_4_Template, 9, 1, \"div\", 4);\n    i0.ɵɵtemplate(5, PostDetailComponent_div_0_div_5_Template, 9, 8, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.posts);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isAuth);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.comments);\n  }\n}\nexport class PostDetailComponent {\n  constructor(route, postService, commentService, authService, router) {\n    this.route = route;\n    this.postService = postService;\n    this.commentService = commentService;\n    this.authService = authService;\n    this.router = router;\n    this.newComment = {\n      content: ''\n    };\n  }\n  ngOnInit() {\n    this.isAuth = this.authService.isLoggedIn();\n    this.route.paramMap.subscribe(params => {\n      this.postId = +params.get('id');\n      this.loadPostDetails();\n      this.loadComments();\n      //console.log(this.route.snapshot.url[0].path + '/' + this.route.snapshot.url[1].path);\n    });\n  }\n\n  onSubmit() {\n    console.log('Submit button clicked');\n    this.route.paramMap.subscribe(params => {\n      this.postId = +params.get('id');\n      this.commentService.addComment(this.newComment, this.postId).subscribe(response => {\n        console.log('Comment added successfully!', response);\n        this.newComment = {\n          content: ''\n        };\n        this.router.navigate(['/addComment']);\n      }, error => {\n        console.error('Error adding comment', error);\n      });\n    });\n  }\n  loadPostDetails() {\n    // Use the PostService to get the specific post details\n    this.postService.getPost(this.postId).subscribe(response => {\n      this.post = response.data;\n    });\n  }\n  loadComments() {\n    // Use the CommentService to get comments for the specific post\n    this.commentService.getCommentsByPost(this.postId).subscribe(response => {\n      this.comments = response.data;\n    });\n  }\n  deleteComment(commentId) {\n    // Get the postId from the route or any other way you have it available\n    const postId = this.postId; // Assuming postId is already available\n    this.commentService.deleteComment(postId, commentId).subscribe(response => {\n      console.log('Comment deleted successfully!', response);\n      // Reload comments or update the comments array\n      this.loadComments();\n    }, error => {\n      console.error('Error deleting comment', error);\n    });\n  }\n  static #_ = this.ɵfac = function PostDetailComponent_Factory(t) {\n    return new (t || PostDetailComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.PostService), i0.ɵɵdirectiveInject(i3.CommentService), i0.ɵɵdirectiveInject(i4.AuthService), i0.ɵɵdirectiveInject(i1.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PostDetailComponent,\n    selectors: [[\"app-post-detail\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"container mt-4\", 4, \"ngIf\"], [1, \"container\", \"mt-4\"], [\"class\", \"card mb-3\", 3, \"routerLink\", 4, \"ngFor\", \"ngForOf\"], [1, \"mt-4\"], [\"class\", \"card mt-4\", 4, \"ngIf\"], [\"class\", \"card\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\", \"mb-3\", 3, \"routerLink\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"], [1, \"card-footer\", \"text-body-secondary\", \"d-flex\", \"justify-content-between\", \"pb-0\"], [\"type\", \"button\", \"class\", \"btn btn-info me-4\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"btn btn-danger\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-info\", \"me-4\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"card\", \"mt-4\"], [3, \"submit\"], [1, \"form-group\"], [\"rows\", \"3\", \"name\", \"content\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"card\"], [1, \"user-info\"], [\"class\", \"edit\", 3, \"routerLink\", 4, \"ngIf\"], [\"class\", \"delete\", 3, \"click\", 4, \"ngIf\"], [1, \"edit\", 3, \"routerLink\"], [1, \"delete\", 3, \"click\"]],\n    template: function PostDetailComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, PostDetailComponent_div_0_Template, 6, 3, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.post);\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf, i1.RouterLink, i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.RequiredValidator, i6.NgModel, i6.NgForm, i5.DatePipe],\n    styles: [\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcG9zdC1kZXRhaWwvcG9zdC1kZXRhaWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBMEZLIiwic291cmNlc0NvbnRlbnQiOlsiLyogLmNvbnRhaW5lciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y2ZjZmNjtcclxuICBjb2xvcjogIzFhMWExYjsgXHJcbiAgcGFkZGluZzogMjBweDtcclxuICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgYm94LXNoYWRvdzogMCAycHggNHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICB3aWR0aDogNzAlO1xyXG59XHJcblxyXG4uY2FyZCB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2ZmNDUwMDsgXHJcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgcGFkZGluZzogMjBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOyAgU2xpZ2h0bHkgZGFya2VyIGJhY2tncm91bmQgXHJcbn1cclxuICBcclxuLmNhcmQtdGl0bGUge1xyXG4gIGZvbnQtc2l6ZTogMi4ycmVtO1xyXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgY29sb3I6ICMxYTFhMWI7XHJcbn1cclxuXHJcbi5jYXJkLXRleHQge1xyXG4gIGZvbnQtc2l6ZTogMS40cmVtO1xyXG4gIGxpbmUtaGVpZ2h0OiAxLjY7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG4gIFxyXG4gIGgzIHtcclxuICAgIGZvbnQtc2l6ZTogMS41cmVtO1xyXG4gICAgbWFyZ2luLXRvcDogMjBweDtcclxuICB9XHJcbiAgXHJcbiAgLmNvbW1lbnQtY2FyZCB7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcclxuICAgIGNvbG9yOiAjMWIxYjFiO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2ZmNDUwMDtcclxuICB9XHJcbiAgXHJcbiAgLmNvbW1lbnQtdGV4dCB7XHJcbiAgICBmb250LXNpemU6IDEuMnJlbTtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjY7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIH1cclxuXHJcbiAgLmZvcm0tY29udHJvbCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xyXG4gICAgY29sb3I6ICMxYjFiMWI7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZmY0NTAwO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICB9XHJcblxyXG4gIC5idG4tcHJpbWFyeSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY0NTAwO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbiAgICBwYWRkaW5nOiA4cHggMTZweDtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5idG4tcHJpbWFyeTpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY4YzVhO1xyXG4gICAgY29sb3I6ICNmNWY1ZjVkMTtcclxuICB9XHJcblxyXG4gIC5lZGl0IHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyZTkzMmU7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIHdpZHRoOiA1MHB4O1xyXG4gICAgaGVpZ2h0OiAzMnB4O1xyXG4gIH1cclxuXHJcbiAgLmRlbGV0ZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzAzNTM1O1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBtYXJnaW4tbGVmdDogNXB4O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgd2lkdGg6IDUwcHg7XHJcbiAgICBoZWlnaHQ6IDMycHg7XHJcbiAgfVxyXG5cclxuICAuZWRpdDpob3ZlciwgLmRlbGV0ZTpob3ZlcntcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyZDJkMmQ7XHJcbiAgfSAqLyJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","PostDetailComponent_div_0_div_1_button_13_Template_button_click_0_listener","ɵɵrestoreView","_r9","post_r4","ɵɵnextContext","$implicit","ctx_r7","ɵɵresetView","onEditPost","id","ɵɵtext","ɵɵelementEnd","PostDetailComponent_div_0_div_1_button_14_Template_button_click_0_listener","_r12","ctx_r10","onDeletePost","ɵɵelement","ɵɵtemplate","PostDetailComponent_div_0_div_1_button_13_Template","PostDetailComponent_div_0_div_1_button_14_Template","ɵɵproperty","ɵɵpureFunction1","_c0","ɵɵadvance","ɵɵtextInterpolate","title","content","ɵɵtextInterpolate1","username","ɵɵpipeBind2","createdAt","ctx_r1","isAuth","authService","isUser","PostDetailComponent_div_0_div_4_Template_form_submit_4_listener","_r14","ctx_r13","onSubmit","PostDetailComponent_div_0_div_4_Template_textarea_ngModelChange_6_listener","$event","ctx_r15","newComment","ctx_r2","ɵɵpureFunction2","_c1","ctx_r17","postId","comment_r16","PostDetailComponent_div_0_div_5_button_8_Template_button_click_0_listener","_r22","ctx_r20","deleteComment","PostDetailComponent_div_0_div_5_button_7_Template","PostDetailComponent_div_0_div_5_button_8_Template","ɵɵtextInterpolate2","ctx_r3","PostDetailComponent_div_0_div_1_Template","PostDetailComponent_div_0_div_4_Template","PostDetailComponent_div_0_div_5_Template","ctx_r0","posts","comments","PostDetailComponent","constructor","route","postService","commentService","router","ngOnInit","isLoggedIn","paramMap","subscribe","params","get","loadPostDetails","loadComments","console","log","addComment","response","navigate","error","getPost","post","data","getCommentsByPost","commentId","_","ɵɵdirectiveInject","i1","ActivatedRoute","i2","PostService","i3","CommentService","i4","AuthService","Router","_2","selectors","decls","vars","consts","template","PostDetailComponent_Template","rf","ctx","PostDetailComponent_div_0_Template"],"sources":["C:\\Users\\in7rt\\Documents\\atlaq\\angular-1\\ang\\src\\app\\post-detail\\post-detail.component.ts","C:\\Users\\in7rt\\Documents\\atlaq\\angular-1\\ang\\src\\app\\post-detail\\post-detail.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PostService } from '../services/post.service';\nimport { CommentService } from '../services/comment.service';\nimport { AuthService } from '../services/auth.service';\nimport jwt_decode from 'jwt-decode';\n\n\n@Component({\n  selector: 'app-post-detail',\n  templateUrl: './post-detail.component.html',\n  styleUrls: ['./post-detail.component.css']\n})\nexport class PostDetailComponent implements OnInit{\n  postId: number;\n  post: any; // Variable to hold the post details\n  comments: any[];\n  isAuth: boolean;\n  newComment = { content: '' };\n\n  constructor(\n    private route: ActivatedRoute,\n    private postService: PostService,\n    private commentService: CommentService,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.isAuth = this.authService.isLoggedIn();\n    this.route.paramMap.subscribe(params => {\n      this.postId = +params.get('id');\n      this.loadPostDetails();\n      this.loadComments();\n      //console.log(this.route.snapshot.url[0].path + '/' + this.route.snapshot.url[1].path);\n    });\n  }\n\n  onSubmit() {\n    console.log('Submit button clicked');\n    this.route.paramMap.subscribe(params => {\n      this.postId = +params.get('id');\n      this.commentService.addComment(this.newComment, this.postId).subscribe(\n        response => {\n          console.log('Comment added successfully!', response);\n          this.newComment = { content: '' };\n          this.router.navigate(['/addComment']);\n        },\n        error => {\n          console.error('Error adding comment', error);\n        }\n      );\n    });\n  }\n\n  loadPostDetails() {\n    // Use the PostService to get the specific post details\n    this.postService.getPost(this.postId).subscribe(response => {\n      this.post = response.data;\n    });\n  }\n\n  loadComments() {\n    // Use the CommentService to get comments for the specific post\n    this.commentService.getCommentsByPost(this.postId).subscribe(response => {\n      this.comments = response.data;\n    });\n  }\n\n  deleteComment(commentId: number) {\n    // Get the postId from the route or any other way you have it available\n    const postId = this.postId; // Assuming postId is already available\n  \n    this.commentService.deleteComment(postId, commentId).subscribe(\n      response => {\n        console.log('Comment deleted successfully!', response);\n        // Reload comments or update the comments array\n        this.loadComments();\n      },\n      error => {\n        console.error('Error deleting comment', error);\n      }\n    );\n  }\n\n}\n","<div class=\"container mt-4\" *ngIf=\"post\">\n    <div class=\"card mb-3\" *ngFor=\"let post of posts\" [routerLink]=\"['/post', post.id]\">\n        <div class=\"card-body\">\n          <h4 class=\"card-title\">{{ post.title }}</h4>\n          <p class=\"card-text\">{{ post.content }}</p>\n        </div>\n        <div class=\"card-footer text-body-secondary d-flex justify-content-between pb-0\">\n          <p>by @{{ post.username }}<br>{{ post.createdAt | date:'medium' }}</p>\n          <div>\n            <button type=\"button\" class=\"btn btn-info me-4\" *ngIf=\"isAuth && post.username === authService.isUser\"\n              (click)=\"onEditPost(post.id)\">Edit</button>\n            <button type=\"button\" class=\"btn btn-danger\" *ngIf=\"isAuth && post.username === authService.isUser\"\n              (click)=\"onDeletePost(post.id)\">Delete</button>\n          </div>\n        </div>\n      </div>\n    \n    <h3 class=\"mt-4\">Comments</h3>\n    \n    <div class=\"card mt-4\" *ngIf=\"isAuth\">\n        <div class=\"card-body\">\n            <h5 class=\"card-title\">Add Comment</h5>\n            <form (submit)=\"onSubmit()\">\n                <div class=\"form-group\">\n                    <textarea class=\"form-control\" rows=\"3\" [(ngModel)]=\"newComment.content\" name=\"content\" required></textarea>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary\">Add a Comment</button>\n            </form>\n        </div>\n    </div>\n\n    <div class=\"card\" *ngFor=\"let comment of comments\">\n        <div class=\"card-body\">\n            <div class=\"user-info\">\n                by {{ comment.username }} on {{ comment.createdAt | date:'medium' }}\n            </div>\n            <p class=\"card-text\">{{ comment.content }}</p>\n            <button class =\"edit\" *ngIf=\"isAuth && comment.username === authService.isUser\" [routerLink]=\"['/editComment', postId, comment.id]\">Edit</button>\n            <button class =\"delete\" *ngIf=\"isAuth && comment.username === authService.isUser\" (click)=\"deleteComment(comment.id)\">Delete</button>\n        </div>\n    </div>\n\n</div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}