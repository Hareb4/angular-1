{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let PostListComponent = class PostListComponent {\n  constructor(postService, authService, router) {\n    this.postService = postService;\n    this.authService = authService;\n    this.router = router;\n    this.newPost = {\n      title: '',\n      content: ''\n    };\n  }\n  ngOnInit() {\n    this.isAuth = this.authService.isLoggedIn();\n    this.postService.getPosts().subscribe(response => {\n      this.posts = response.data;\n    }, error => {\n      console.error(error);\n    });\n  }\n  onSubmit() {\n    console.log('Submit button clicked');\n    this.postService.addPost(this.newPost).subscribe(response => {\n      console.log('Post added successfully!', response);\n      this.newPost = {\n        title: '',\n        content: ''\n      };\n      this.router.navigate(['/addPost']);\n    }, error => {\n      console.error('Error adding post', error);\n    });\n  }\n  onDeletePost(postId) {\n    this.postService.deletePost(postId).subscribe(response => {\n      console.log('Post deleted successfully!', response);\n      this.posts = this.posts.filter(post => post.id !== postId);\n    }, error => {\n      console.error('Error deleting post', error);\n    });\n  }\n  onEditPost(postId) {\n    this.router.navigate(['/editPost', postId]);\n  }\n};\nPostListComponent = __decorate([Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.css']\n})], PostListComponent);","map":{"version":3,"names":["Component","PostListComponent","constructor","postService","authService","router","newPost","title","content","ngOnInit","isAuth","isLoggedIn","getPosts","subscribe","response","posts","data","error","console","onSubmit","log","addPost","navigate","onDeletePost","postId","deletePost","filter","post","id","onEditPost","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\in7rt\\Documents\\atlaq\\angular-1\\ang\\src\\app\\post-list\\post-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { PostService } from '../services/post.service';\nimport { ServiceResponse } from '../services/service-response.service';\nimport { AuthService } from '../services/auth.service';\nimport { ChangeDetectorRef } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport jwt_decode from 'jwt-decode';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.css']\n})\nexport class PostListComponent implements OnInit{\n  \n  posts: any[];\n  newPost: any = { title: '', content: '' };\n  isAuth: boolean;\n  constructor(private postService: PostService, private authService: AuthService, private router: Router) { } \n  \n  ngOnInit(): void {\n    this.isAuth = this.authService.isLoggedIn();\n    this.postService.getPosts().subscribe(\n      (response: ServiceResponse<any[]>) => {\n        this.posts = response.data;\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n  \n  onSubmit() {\n    console.log('Submit button clicked');\n    this.postService.addPost(this.newPost).subscribe(\n      response => {\n        console.log('Post added successfully!', response);\n        this.newPost = { title: '', content: '' };\n        this.router.navigate(['/addPost']);\n      },\n      error => {\n        console.error('Error adding post', error);\n      }\n    );\n  }\n\n  onDeletePost(postId: number) {\n    this.postService.deletePost(postId).subscribe(\n      response => {\n        console.log('Post deleted successfully!', response);\n        this.posts = this.posts.filter(post => post.id !== postId);\n      },\n      error => {\n        console.error('Error deleting post', error);\n      }\n    );\n  }\n\n  onEditPost(postId: number) {\n    this.router.navigate(['/editPost', postId]);\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAc1C,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAK5BC,YAAoBC,WAAwB,EAAUC,WAAwB,EAAUC,MAAc;IAAlF,KAAAF,WAAW,GAAXA,WAAW;IAAuB,KAAAC,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAF9F,KAAAC,OAAO,GAAQ;MAAEC,KAAK,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAE,CAAE;EAEiE;EAE1GC,QAAQA,CAAA;IACN,IAAI,CAACC,MAAM,GAAG,IAAI,CAACN,WAAW,CAACO,UAAU,EAAE;IAC3C,IAAI,CAACR,WAAW,CAACS,QAAQ,EAAE,CAACC,SAAS,CAClCC,QAAgC,IAAI;MACnC,IAAI,CAACC,KAAK,GAAGD,QAAQ,CAACE,IAAI;IAC5B,CAAC,EACAC,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACH;EAEAE,QAAQA,CAAA;IACND,OAAO,CAACE,GAAG,CAAC,uBAAuB,CAAC;IACpC,IAAI,CAACjB,WAAW,CAACkB,OAAO,CAAC,IAAI,CAACf,OAAO,CAAC,CAACO,SAAS,CAC9CC,QAAQ,IAAG;MACTI,OAAO,CAACE,GAAG,CAAC,0BAA0B,EAAEN,QAAQ,CAAC;MACjD,IAAI,CAACR,OAAO,GAAG;QAAEC,KAAK,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAE,CAAE;MACzC,IAAI,CAACH,MAAM,CAACiB,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;IACpC,CAAC,EACDL,KAAK,IAAG;MACNC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C,CAAC,CACF;EACH;EAEAM,YAAYA,CAACC,MAAc;IACzB,IAAI,CAACrB,WAAW,CAACsB,UAAU,CAACD,MAAM,CAAC,CAACX,SAAS,CAC3CC,QAAQ,IAAG;MACTI,OAAO,CAACE,GAAG,CAAC,4BAA4B,EAAEN,QAAQ,CAAC;MACnD,IAAI,CAACC,KAAK,GAAG,IAAI,CAACA,KAAK,CAACW,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAAC;IAC5D,CAAC,EACDP,KAAK,IAAG;MACNC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C,CAAC,CACF;EACH;EAEAY,UAAUA,CAACL,MAAc;IACvB,IAAI,CAACnB,MAAM,CAACiB,QAAQ,CAAC,CAAC,WAAW,EAAEE,MAAM,CAAC,CAAC;EAC7C;CAED;AAjDYvB,iBAAiB,GAAA6B,UAAA,EAL7B9B,SAAS,CAAC;EACT+B,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACWhC,iBAAiB,CAiD7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}